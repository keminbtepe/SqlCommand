use ETRADE



 

CREATE VIEW AYLARAGORE
AS
SELECT 
DATEPART(YEAR,O.DATE_) YIL,

CASE
	WHEN DATEPART(MONTH,O.DATE_)=1 THEN 'OCAK'
	WHEN DATEPART(MONTH,O.DATE_)=2 THEN 'SBT'
	WHEN DATEPART(MONTH,O.DATE_)=3 THEN 'MRT'
	WHEN DATEPART(MONTH,O.DATE_)=4 THEN 'NSN'
	WHEN DATEPART(MONTH,O.DATE_)=5 THEN 'MYS'
	WHEN DATEPART(MONTH,O.DATE_)=6 THEN 'HZRAN'
	WHEN DATEPART(MONTH,O.DATE_)=7 THEN 'TEMMUZ'
	WHEN DATEPART(MONTH,O.DATE_)=8 THEN 'AGUSTOS'
	WHEN DATEPART(MONTH,O.DATE_)=9 THEN 'EYL'
	WHEN DATEPART(MONTH,O.DATE_)=10 THEN 'EKM'
	WHEN DATEPART(MONTH,O.DATE_)=11 THEN 'KASM'
	WHEN DATEPART(MONTH,O.DATE_)=12 THEN 'ARLK'

END AS AY

,SUM(OD.AMOUNT) TOPLAMMIKTAR,SUM(LINETOTAL),
COUNT(OD.ID) URUNSAYISI,COUNT(DISTINCT O.ID) AS MUSTERISAYISI
FROM 
ORDERDETAILS OD
INNER JOIN ORDERS O ON OD.ORDERID=O.ID
INNER JOIN ITEMS ITM ON ITM.ID=OD.ITEMID
INNER JOIN USERS U ON U.ID=O.USERID
INNER JOIN ADDRESS A ON A.ID= O.ADDRESSID
INNER JOIN COUNTRIES C ON C.ID=A.COUNTRYID
INNER JOIN CITIES CT ON CT.ID=A.CITYID
INNER JOIN TOWNS T ON T.ID = A.TOWNID
INNER JOIN PAYMENTS P ON P.ORDERID=O.ID

GROUP BY DATEPART(YEAR,O.DATE_),DATEPART(MONTH,O.DATE_)

SELECT * FROM ETALLVIEW

-----------------------------------------
SELECT 
ITM.ITEMCODE MALZEMEKODU,ITM.ITEMNAME MALZEMEADI,MIN(OD.UNITPRICE) AS ENDUSUKFIYAT,MAX(OD.UNITPRICE) AS ENYUKSEKFIYAT,
AVG(OD.UNITPRICE) AS ORTALAMAFIYAT, SUM(OD.LINETOTAL) AS TOPLAMSATISTUTAR,SUM(OD.AMOUNT) AS SATISMIKTAR
FROM 
ORDERDETAILS OD
INNER JOIN ORDERS O ON OD.ORDERID=O.ID
INNER JOIN ITEMS ITM ON ITM.ID=OD.ITEMID
INNER JOIN USERS U ON U.ID=O.USERID
GROUP BY ITM.ITEMCODE,ITM.ITEMNAME
-------------------------------------------

SELECT ITM.ITEMCODE MALZEMEKODU,ITM.ITEMNAME MALZEMEADI,
(SELECT MIN(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ID = ITM.ID) AS ENDUSUKFIYAT,
(SELECT MAX(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ID = ITM.ID) AS ENDUSUKFIYAT,
(SELECT AVG(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ID = ITM.ID) AS ORTALAMAFIYAT,
(SELECT SUM(LINETOTAL) FROM ORDERDETAILS OD WHERE OD.ID = ITM.ID) AS ENDUSUKFIYAT 


FROM ITEMS ITM

----------------------------------------------

CREATE FUNCTION DBO.GET_ITEM_MINPRICE(@ITEMID AS FLOAT)
RETURNS FLOAT
AS
BEGIN
	DECLARE @RESULT AS FLOAT
	SELECT @RESULT=MIN(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ID = @ITEMID 
	RETURN @RESULT
END
-----------------------------------------------------------
CREATE FUNCTION DBO.GET_ITEM_MAXPRICE(@ITEMID AS FLOAT)
RETURNS FLOAT
AS
BEGIN
	DECLARE @RESULT AS FLOAT
	SELECT @RESULT=MAX(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ID = @ITEMID 
	RETURN @RESULT
END
---------------------------------------------
CREATE FUNCTION DBO.GET_ITEM_TOTALSALE(@ITEMID AS FLOAT)
RETURNS FLOAT
AS
BEGIN
	DECLARE @RESULT AS FLOAT
	SELECT @RESULT=SUM(LINETOTAL) FROM ORDERDETAILS OD WHERE OD.ID = @ITEMID 
	RETURN @RESULT
END
-------------------------------------------------------

SELECT ITM.ITEMCODE MALZEMEKODU,ITM.ITEMNAME MALZEMEADI,
					DBO.GET_ITEM_MINPRICE(ITM.ID) ENDUSUKSATIS,
					DBO.GET_ITEM_MAXPRICE(ITM.ID) ENYUKSEKSATIS,
					DBO.GET_ITEM_AVGPRICE(ITM.ID) ORTALAMASATIS,
					DBO.GET_ITEM_TOTALSALE(ITM.ID) TOPLAMSATIS
--(SELECT MAX(UNITPRICE) FROM ORDERDETAILS OD WHERE OD.ID = ITM.ID) AS ENDUSUKFIYAT 
FROM ITEMS ITM
------------------------------------------------------
UPDATE STATISTICS ORDERDETAILS
----------------------------------------------------------

CREATE FUNCTION DBO.GET_ITEM_PRICE(@ITEMID AS FLOAT,@PRICETYPE AS VARCHAR(5))
RETURNS FLOAT
AS
BEGIN
	DECLARE @RESULT AS FLOAT

		IF @PRICETYPE='MIN'
		BEGIN
			SELECT @RESULT=MIN(LINETOTAL) FROM ORDERDETAILS OD WHERE OD.ID = @ITEMID 
		END

		IF @PRICETYPE='MAX'
		BEGIN
			SELECT @RESULT=MAX(LINETOTAL) FROM ORDERDETAILS OD WHERE OD.ID = @ITEMID 
		END

		IF @PRICETYPE='AVG'
		BEGIN
			SELECT @RESULT=AVG(LINETOTAL) FROM ORDERDETAILS OD WHERE OD.ID = @ITEMID 
		END

		IF @PRICETYPE='SUM'
		BEGIN
			SELECT @RESULT=SUM(LINETOTAL) FROM ORDERDETAILS OD WHERE OD.ID = @ITEMID 
		END
	
	RETURN @RESULT
END

--------------------------------------------------------------
SET STATISTICS TIME ON
SELECT ITM.ITEMCODE MALZEMEKODU,ITM.ITEMNAME MALZEMEADI,
DBO.GET_ITEM_PRICE(ITM.ID,'MIN') ENDUSUKSATIS,
DBO.GET_ITEM_PRICE(ITM.ID,'MAX') ENYUKSEKSATIS,
DBO.GET_ITEM_PRICE(ITM.ID,'AVG') ORTALAMASATIS,
DBO.GET_ITEM_PRICE(ITM.ID,'SUM') TOPLAMSATIS
FROM ITEMS ITM


---------------TABLE FUNCTION------------------------

CREATE FUNCTION DBO.GET_ITEM_INFO(@ITEMID INT)
RETURNS TABLE
AS
RETURN 
	(
		SELECT 
		MIN(UNITPRICE) AS MINPRICE, 
		MAX(UNITPRICE) AS MAXPRICE,
		AVG(UNITPRICE) AS AVGPRICE,
		SUM(UNITPRICE) AS TOTALSALE,
		SUM(AMOUNT) AS TOTALAMOUNT
		FROM ORDERDETAILS WHERE ITEMID=@ITEMID
	)


----------------------------------------------------------
SET STATISTICS TIME ON

SELECT * FROM GET_ITEM_INFO(5)


------------------------------------------------------------------
------VERIMLILIK ACISINDAN CROSS APPLY DAHA HIZLI CALISIR---------

SET STATISTICS TIME ON
SELECT ITM.ITEMCODE MALZEMEKODU,ITM.ITEMNAME MALZEMEADI,ITEMINFO.MINPRICE ENDUSUKFIYAT,ITEMINFO.MAXPRICE ENYUKSEKFIYAT,
ITEMINFO.AVGPRICE,ITEMINFO.TOTALAMOUNT
FROM ITEMS ITM
CROSS APPLY DBO.GET_ITEM_INFO(ITM.ID) AS ITEMINFO

-----------------------------------------------------------------